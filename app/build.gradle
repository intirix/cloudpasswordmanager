apply plugin: 'com.android.application'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}


android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.intirix.cloudpasswordmanager"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 15
        versionName "1.5.1"
    }
    signingConfigs {
        myrelease {
            storeFile file(System.getProperty("user.home")+"/.keys/keystore")
            storePassword project.hasProperty("KEYSTORE_PASSWORD") ? KEYSTORE_PASSWORD : ""
            keyAlias "intirix"
            keyPassword project.hasProperty("KEYSTORE_PASSWORD") ? KEYSTORE_PASSWORD : ""
        }
    }
    buildTypes {
        debug {
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date("+System.currentTimeMillis()+"L)"
            buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
            buildConfigField "boolean", "ALLOW_SCREENSHOTS", "true"
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.myrelease
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date("+System.currentTimeMillis()+"L)"
            buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
            buildConfigField "boolean", "ALLOW_SCREENSHOTS", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation project(':secretsmanagerapiv1') {
        //exclude module: "org.apache.oltu.oauth2.common"
    }
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor 'com.squareup:javapoet:1.9.0'
    annotationProcessor "com.google.dagger:dagger-compiler:2.11"


    testImplementation 'org.robolectric:robolectric:3.4.2'
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'

    testImplementation 'org.easymock:easymock:3.1'
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.5'


    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.google.dagger:dagger:2.11'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.android.support:design:28.0.0'
    //implementation group: 'javax.inject', name: 'javax.inject', version: '1'

    implementation 'org.greenrobot:eventbus:3.0.0'
    //compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.57'
    implementation group: 'com.madgag.spongycastle', name: 'prov', version: '1.56.0.0'
}
